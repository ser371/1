name: Windows RDP via Tailscale (B)

on:
  workflow_run:
    workflows: ["Windows RDP via Tailscale (A)"]
    types: [completed]

permissions:
  contents: write
  actions: write

jobs:
  rdp:
    runs-on: windows-2022
    timeout-minutes: 370

    steps:
      - name: üßæ Read payload
        id: cfg
        shell: pwsh
        run: |
          $ev = ConvertFrom-Json '${{ toJson(github.event) }}'
          $p  = $ev.client_payload
          "tailnet=$($p.ts_tailnet)"   | Out-File -Append $env:GITHUB_OUTPUT
          "apikey=$($p.ts_api_key)"    | Out-File -Append $env:GITHUB_OUTPUT
          "authkey=$($p.ts_authkey)"   | Out-File -Append $env:GITHUB_OUTPUT
          "apitok=$($p.gh_api_token)"  | Out-File -Append $env:GITHUB_OUTPUT

      - name: ‚ö° Install Tailscale
        shell: pwsh
        run: |
          $exe = "C:\Program Files\Tailscale\tailscale.exe"
          if (-not (Test-Path $exe)) {
            $url = 'https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe'
            $dst = "$env:TEMP\tailscale-setup.exe"
            Invoke-WebRequest -Uri $url -OutFile $dst -UseBasicParsing
            Start-Process -FilePath $dst -ArgumentList "/quiet" -Wait
          }
          Start-Service Tailscale -ErrorAction SilentlyContinue
          & $exe version

      - name: üîê Enable RDP user + firewall
        shell: pwsh
        run: |
          $u = "Bullettemporary"; $p = "Bullet@12345"
          $sec = ConvertTo-SecureString $p -AsPlainText -Force
          if (-not (Get-LocalUser -Name $u -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $u -Password $sec -AccountNeverExpires
            Add-LocalGroupMember -Group Administrators -Member $u
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $u
          } else {
            Set-LocalUser -Name $u -Password $sec -AccountNeverExpires
            Enable-LocalUser -Name $u
          }
          Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name fDenyTSConnections -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: üßπ Purge bullet* devices (startup)
        shell: pwsh
        run: |
          $hdr = @{ Authorization = "Bearer ${{ steps.cfg.outputs.apikey }}" }
          $tn  = [uri]::EscapeDataString("${{ steps.cfg.outputs.tailnet }}")
          try {
            $resp = Invoke-RestMethod -Method GET -Headers $hdr -Uri "https://api.tailscale.com/api/v2/tailnet/$tn/devices"
            foreach ($d in $resp.devices) {
              if ($d.name -match '^(?i)bullet') {
                try { Invoke-RestMethod -Method DELETE -Headers $hdr -Uri "https://api.tailscale.com/api/v2/device/$($d.id)" }
                catch { }
              }
            }
          } catch { }

      - name: üîó Tailscale up
        shell: pwsh
        run: |
          $ts = "C:\Program Files\Tailscale\tailscale.exe"
          & $ts logout | Out-Null
          & $ts up --authkey "${{ steps.cfg.outputs.authkey }}" --hostname bullet --accept-routes --accept-dns=false
          $ip4 = & $ts ip -4 | Select-Object -First 1
          $status = & $ts status --json | ConvertFrom-Json
          $fqdn = $status.Self.DNSName
          "### RDP CONNECT (B)`nHost: bullet`nIPv4: $ip4`nMagicDNS: $fqdn`nUser: Bullettemporary`nPass: Bullet@12345" | Out-File $env:GITHUB_STEP_SUMMARY -Append -Encoding utf8

      - name: ‚è≥ Keep alive ~6h
        shell: pwsh
        run: |
          $mins = 355
          $endAt = (Get-Date).AddMinutes($mins)
          while ((Get-Date) -lt $endAt) {
            $left = [int]([math]::Ceiling(($endAt - (Get-Date)).TotalMinutes))
            Write-Host "[$(Get-Date -Format 'HH:mm:ss')] Alive ($left min left)"
            Start-Sleep -Seconds 60
          }

      - name: üßπ Purge bullet* devices (exit)
        if: always()
        shell: pwsh
        run: |
          $hdr = @{ Authorization = "Bearer ${{ steps.cfg.outputs.apikey }}" }
          $tn  = [uri]::EscapeDataString("${{ steps.cfg.outputs.tailnet }}")
          try {
            $resp = Invoke-RestMethod -Method GET -Headers $hdr -Uri "https://api.tailscale.com/api/v2/tailnet/$tn/devices"
            foreach ($d in $resp.devices) {
              if ($d.name -match '^(?i)bullet') {
                try { Invoke-RestMethod -Method DELETE -Headers $hdr -Uri "https://api.tailscale.com/api/v2/device/$($d.id)" }
                catch { }
              }
            }
          } catch { }

      - name: üîÅ Dispatch partner (A)
        if: always()
        shell: pwsh
        run: |
          $token = "${{ steps.cfg.outputs.apitok }}"
          $body = @{
            event_type = "enigmano_a"
            client_payload = @{
              ts_tailnet   = "${{ steps.cfg.outputs.tailnet }}"
              ts_api_key   = "${{ steps.cfg.outputs.apikey }}"
              ts_authkey   = "${{ steps.cfg.outputs.authkey }}"
              gh_api_token = $token
            }
          } | ConvertTo-Json -Depth 4
          Invoke-RestMethod -Method POST `
            -Uri "https://api.github.com/repos/${{ github.repository }}/dispatches" `
            -Headers @{ Authorization = "Bearer $token"; "Accept"="application/vnd.github+json" } `
            -Body $body
